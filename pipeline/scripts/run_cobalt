#!/bin/bash

cobalt_jar=$1 && shift
tumor_id=$1 && shift
tumor_bam=$1 && shift
reference_id=$1 && shift
reference_bam=$1 && shift
output_dir=$1 && shift
run_mode=$1 && shift
ref_genome=$1 && shift
gc_profile=$1 && shift
tumor_only_diploid_bed=$1 && shift
target_region_normalisation=$1 && shift
threads=$1 && shift
max_memory=$1 && shift

output_tsv=${output_dir}/${tumor_id}.cobalt.ratio.tsv.gz

if [[ -f "${output_tsv}" ]]; then
  echo "Skipping Cobalt for ${tumor_id}, since output ${output_tsv} exists"
  exit
fi

if [[ ! -d "${output_dir}" ]]; then
  mkdir ${output_dir}
fi

args="-tumor ${tumor_id} -tumor_bam ${tumor_bam}"

if [ ! "${reference_id}" == "none" ]; then
  args="${args} -reference ${reference_id} -reference_bam ${reference_bam}"
else
  args="${args} -tumor_only_diploid_bed ${tumor_only_diploid_bed}"
fi  

if [ "${run_mode}" == "PANEL" ]; then
  args="${args} -target_region ${target_region_normalisation} -pcf_gamma 50"
fi

args="${args} -ref_genome ${ref_genome} \
  -gc_profile ${gc_profile} \
  -threads ${threads} \
  -output_dir ${output_dir}"

echo "Running Cobalt with args: ${args}"

java -Xmx${max_memory}G -jar ${cobalt_jar} ${args}
